
# {{{1 GENERAL OPTIONS

# Rebind prefix from 'C-b' to 'C-s'
unbind-key C-b
set-option -g prefix C-s
set-option -g mode-keys vi

set-option -g history-limit 50000                  # increase scrollback buffer size
set-option -g display-time 1500                    # tmux messages are displayed for 1.5 seconds
set-option -sg escape-time 0                       # no delay for escape key press
set-option -s default-terminal "screen-256color"   # upgrade $TERM
set-option -g focus-events on                      # focus events enabled for terminals that support them

set-option -g mouse on
set-option -g visual-activity on
set-window-option -g monitor-activity on
set-window-option -g aggressive-resize on          # resize to the smallest window in focus

# Allow dim-ed colours, strike and italics in Tmux
set-option -as terminal-overrides ',*:dim=\E[2m'
set-option -as terminal-overrides ',*:smxx=\E[9m'
set-option -as terminal-overrides ',*:sitm=\E[3m'


# {{{1 MAPPING

# Reload config
bind-key e send-keys '$EDITOR ~/.config/tmux/tmux.conf && tmux source-file ~/.config/tmux/tmux.conf' Enter
bind-key r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config reloaded"
bind-key G source-file ~/.config/tmux/layouts/git_watch.tmux
bind-key M source-file ~/.config/tmux/layouts/monitor.tmux
bind-key Y source-file ~/.config/tmux/layouts/update.tmux
bind-key D send-keys 'kill -s USR1 $(tmux show-environment TMUX_PPID | sed ''s/^.*=//'') && tmux kill-session' Enter

# When pressing prefix two times, send the second through tmux
bind-key C-s send-keys C-s

# Alt-= to equalize panes (i.e. prefix+M-5)
bind-key -n M-= select-layout tiled

# Alt-[|] gets in copy mode and copy
bind-key -n M-[ copy-mode
bind-key -n M-] paste-buffer

# s to select word in copy mode
bind-key -T copy-mode-vi s send-keys lb Space e

# Mouse doesn't quit copy-mode
unbind-key -T copy-mode-vi MouseDragEnd1Pane

# Copy text to clipboard in copy-mode with Enter or Scroll whell click
bind-key -T copy-mode-vi MouseDown2Pane send-keys -X copy-pipe-no-clear "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard"
bind-key -T copy-mode-vi M-Enter send-keys -X copy-pipe-and-cancel "xclip -i -f -selection primary | xclip -i -selection clipboard" \; paste-buffer
bind-key -T copy-mode-vi C-o send-keys -X copy-pipe-and-cancel \; send-keys vim Space \; paste-buffer \; send-keys Enter

# Clear selection in copy-mode with C-l or right mouse click
bind-key -T copy-mode-vi C-l send-keys -X clear-selection
bind-key -T copy-mode-vi MouseDown3Pane send-keys -X clear-selection

# Escape to quit copy mode, even in vi-mode
bind-key -T copy-mode-vi Escape send-keys -X cancel

# Remote key-binding
bind-key -n F12 \
    set prefix None \; \
    set key-table off \; \
    refresh-client -S

bind-key -T off F12 \
    set -u prefix \; \
    set -u key-table \; \
    refresh-client -S

# {{{1 PLUGINS

set-environment -g TMUX_PLUGIN_MANAGER_PATH '~/.config/tmux/plugins/'
set-option -g @plugin 'tmux-plugins/tpm'
set-option -g @plugin 'tmux-plugins/tmux-resurrect'
set-option -g @plugin 'regex-search'
set-option -g @plugin 'session-manager'

# Resurrect
set-option -g @resurrect-save 'S'
set-option -g @resurrect-restore 'R'
set-option -g @resurrect-capture-pane-contents 'on'
set-option -g @resurrect-dir '~/.cache/tmux/resurrect'

# {{{1 WINDOWS

# Right numbers for windows
set-option -g base-index 1
set-window-option -g pane-base-index 1

# Renumber windows
set-option -g renumber-windows on

# Change window name
set-option -g set-titles on
set-option -g set-titles-string '#h #S.#I'

# When renaming a window, set automatic-rename when empty name is given
bind-key , command-prompt -I "#W" "rename-window '%%' \; if-shell \"[ -z '#W' ]\" \"set automatic-rename on\""

# Shift-arrow to switch windows
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# Alt-[p|n] to switch windows
bind-key -n M-p previous-window
bind-key -n M-n next-window

# Alt+[1-8] to choose window
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8

# Alt-Shift-[p|n] to move windows
bind-key -n M-P swap-window -dt -1
bind-key -n M-N swap-window -dt +1

# Alt-[T|R] to create new window
bind-key -n M-T new-window
bind-key -n M-R new-window -c "#{pane_current_path}" -a

# Alt-Shift-W to kill window
bind-key -n M-W kill-window

# {{{1 PANES

# Split panes using | and -
bind-key | split-window -h -c "#{pane_current_path}"
bind-key -n M-\\ split-window -h -c "#{pane_current_path}"
bind-key -n M-| split-window -h
bind-key -n C-M-\\ split-window -hf -c "#{pane_current_path}"

bind-key - split-window -v -c "#{pane_current_path}"
bind-key -n M-- split-window -v -c "#{pane_current_path}"
bind-key -n M-_ split-window -v
bind-key -n C-M-_ split-window -vf -c "#{pane_current_path}"
unbind-key '"'
unbind-key %

# Change layout with Alt+Shift+[1-5]
bind-key -n M-! select-layout main-horizontal
bind-key -n M-@ select-layout main-vertical
bind-key -n 'M-#' select-layout tiled
bind-key -n 'M-$' select-layout even-horizontal
bind-key -n M-% select-layout even-vertical

# Vim style pane selection
bind-key h select-pane -L
bind-key j select-pane -D
bind-key k select-pane -U
bind-key l select-pane -R

# Vim style pane resize
bind-key -r H resize-pane -L 5
bind-key -r J resize-pane -D 5
bind-key -r K resize-pane -U 5
bind-key -r L resize-pane -R 5

bind-key -n M-H resize-pane -L 2
bind-key -n M-J resize-pane -D 2
bind-key -n M-K resize-pane -U 2
bind-key -n M-L resize-pane -R 2

bind-key -r M-H resize-pane -L 1
bind-key -r M-J resize-pane -D 1
bind-key -r M-K resize-pane -U 1
bind-key -r M-L resize-pane -R 1


# Use Alt-vim keys without prefix key to switch panes
%hidden is_vim="ps -o state= -o comm= -t '#{pane_tty}' | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n M-h if-shell "$is_vim" "send-keys M-h" "select-pane -L"
bind-key -n M-j if-shell "$is_vim" "send-keys M-j" "select-pane -D"
bind-key -n M-k if-shell "$is_vim" "send-keys M-k" "select-pane -U"
bind-key -n M-l if-shell "$is_vim" "send-keys M-l" "select-pane -R"

# Use Alt-arrow keys without prefix key to switch panes
bind-key -n M-Left select-pane -L
bind-key -n M-Right select-pane -R
bind-key -n M-Up select-pane -U
bind-key -n M-Down select-pane -D

# Alt+[<|>] to switch panes
bind-key -n M-< swap-pane -U
bind-key -n M-> swap-pane -D

# Prefix+u to join pane
bind-key u command-prompt -p "join pane from :" "join-pane -s ':%%'"

# Alt+z to zoom
bind-key -n M-z resize-pane -Z

# Alt-y to synchronize
bind-key -n M-y setw synchronize-panes

# Alt+w to kill pane
bind-key -n M-w kill-pane
bind-key o kill-pane -a

# Prefix+x to respawn
bind-key x respawn-pane -k -c "#{pane_current_path}"

# Define a custom command on M-g (several commands with ' ; ')
bind-key -n M-G command-prompt -p "Command:" \
    "set-buffer -b cmd '%%' \; \
    run 'mkdir -p ~/.cache/tmux' \; \
    save-buffer -b cmd ~/.cache/tmux/buffer_cmd \; \
    delete-buffer -b cmd \; \
    bind-key -n M-g source-file ~/.cache/tmux/buffer_cmd"

# {{{1 DESIGN CHANGES

# Panes
set-option -g pane-border-style bg=colour235,fg=colour238
set-option -g pane-active-border-style bg=colour236,fg=colour51

# Messages
set-option -g message-style bg=yellow,fg=black,bold
set-option -g message-command-style bg=black,fg=blue

# Loud or quiet?
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-window-option -g monitor-activity off
set-option -g bell-action none

# Modes
set-window-option -g clock-mode-colour colour135
set-window-option -g mode-style bg=colour238,fg=colour196,bold

# Statusbar
keys_off="#[fg=white,bg=colour088]#([ $(tmux show-option -qv key-table) = 'off' ] && echo 'OFF')#[default]"

set-option -g status-position bottom
set-option -g status-style bg=colour234,fg=colour137,dim
set-option -g status-left ' #[fg=colour39]#S '
set-option -g status-right " $keys_off #[fg=colour76,bold] %H:%M:%S #[fg=colour39,bold] %d %h "
set-option -g status-right-length 50
set-option -g status-left-length 20
set-option -g status-justify left
set-option -g status-interval 1

# Window status
set-window-option -g window-status-current-style bg=colour238,fg=colour81,bold
set-window-option -g window-status-current-format ' #I#[fg=colour250]:#[fg=colour255]#W#[fg=colour50]#F '

set-window-option -g window-status-style bg=colour235,fg=colour138,none
set-window-option -g window-status-format ' #I#[fg=colour237]:#[fg=colour250]#W#[fg=colour244]#F '

set-window-option -g window-status-bell-style bg=colour1,fg=colour255,bold

# {{{1 RUN TPM

# Install tpm if needed
if "test ! -d ~/.config/tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.config/tmux/plugins/tpm && ~/.config/tmux/plugins/tpm/bin/install_plugins'"

# Run tpm
run '~/.config/tmux/plugins/tpm/tpm'

# vim:fdm=marker
